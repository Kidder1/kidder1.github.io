<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kidder1&#39;s Blog!</title>
  
  
  <link href="https://kidder1.github.io/atom.xml" rel="self"/>
  
  <link href="https://kidder1.github.io/"/>
  <updated>2023-07-20T03:45:54.207Z</updated>
  <id>https://kidder1.github.io/</id>
  
  <author>
    <name>Kidder1</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>movfuscator混淆</title>
    <link href="https://kidder1.github.io/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/"/>
    <id>https://kidder1.github.io/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/</id>
    <published>2023-07-19T07:05:36.000Z</published>
    <updated>2023-07-20T03:45:54.207Z</updated>
    
    <content type="html"><![CDATA[<h1 id="混淆器"><a href="#混淆器" class="headerlink" title="混淆器"></a>混淆器</h1><p>在mov指令的图灵完备性被证明之后，就产生了一种使用mov指令代替其他各种指令的混淆机制，运算，跳转，函数调用都可以全部使用mov指令实现。</p><p>Githhub链接：<a href="https://github.com/xoreaxeaxeax/movfuscator">https://github.com/xoreaxeaxeax/movfuscator</a> 按照github安装之后，正常编译就行</p><h1 id="解混淆器"><a href="#解混淆器" class="headerlink" title="解混淆器"></a>解混淆器</h1><p>Github链接：<a href="https://github.com/kirschju/demovfuscator">https://github.com/kirschju/demovfuscator</a></p><p>这个需要三个库：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">- libcapstone</span><br><span class="line">sudo git clone https:<span class="comment">//github.com/aquynh/capstone.git</span></span><br><span class="line">cd capstone/</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br><span class="line">- libz3</span><br><span class="line">sudo git clone https:<span class="comment">//github.com/Z3Prover/z3.git</span></span><br><span class="line">cd z3</span><br><span class="line">python scripts/mk_make.py</span><br><span class="line">cd build</span><br><span class="line">make</span><br><span class="line">sudo make install </span><br><span class="line">- libkeystone</span><br><span class="line">sudo git clone https:<span class="comment">//github.com/keystone-engine/keystone.git</span></span><br><span class="line">cd keystone/</span><br><span class="line">sudo mkdir build</span><br><span class="line">cd build/</span><br><span class="line">sudo ../make-share.sh </span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br><span class="line">- demovfuscator </span><br><span class="line">git clone https:<span class="comment">//github.com/kirschju/demovfuscator.git</span></span><br><span class="line">make</span><br></pre></td></tr></table></figure><ul><li>思路mov混淆的解决方式：<ol><li>简单的，会在某个寄存器中出现，全局搜索该寄存器后可以得出结果</li><li>或者可以使用动态调试出结果</li><li>难的，需要爆破</li><li>使用工具 https:&#x2F;&#x2F;<a href="https://so.csdn.net/so/search?q=github&spm=1001.2101.3001.7020">github</a>.com&#x2F;kirschju&#x2F;demovfuscator</li><li>找到字符串然后根据读写断点观察输入在内存的变化找到&#x2F;猜测加密逻辑</li></ol></li></ul><h1 id="例子ciscn-2023-moveAside"><a href="#例子ciscn-2023-moveAside" class="headerlink" title="例子ciscn 2023 moveAside"></a>例子ciscn 2023 moveAside</h1><p>这道题mov混淆呢，当时没有做出来，现在看了一些师傅的题解，稍微复盘总结一</p><h2 id="查找字符串"><a href="#查找字符串" class="headerlink" title="查找字符串"></a>查找字符串</h2><p>找到字符串向上翻阅</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719171047390.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719171047390.png"  class="" lazyload></a><p>可以找到密文，这里我已经转成数组形式了</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719171223774.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719171223774.png"  class="" lazyload></a><p>这里可以得到字符串长度是44</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719172931878.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719172931878.png"  class="" lazyload></a><p>然后这里直接下断点调试的话是会触发异常的，可以看到这里调用了sigaction函数</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720092516751.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720092516751.png"  class="" lazyload></a><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720092828038.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720092828038.png"  class="" lazyload></a><p>IDA这个异常处理的过程我一直不是很了解,根据搜索字符串然后下断点调试再试试</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720102536313.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720102536313.png"  class="" lazyload></a><p>这里又触发异常了，这里设置成这样好像就不会有提示了</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720102714851.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720102714851.png"  class="" lazyload></a><p>然后这个一直按着F9调试一直等到所有的停住即可</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720110254452.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720110254452.png"  class="" lazyload></a><p>然后一直没有反应，在密文那块下了一个读写断点</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720111141895.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720111141895.png"  class="" lazyload></a><p>密文长度</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720111254827.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230720111254827.png"  class="" lazyload></a><p>跳不出来，，，我晕了。。。。算了还是太菜了。。。</p><h2 id="用工具"><a href="#用工具" class="headerlink" title="用工具"></a>用工具</h2><p>这个破工具装了一下午，刚开始在ubuntu18上面，结果那个clang的版本不够，然后有在22上面装，结果编译那个库编译了几十分钟，然后我又make -j8，才搞好。</p><p>试试效果怎么样</p><a class="simple-lightbox" href="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719182131996.png"><img   src="/images/loading.svg" data-src="/2023/07/19/movfuscator%E6%B7%B7%E6%B7%86/image-20230719182131996.png"  class="" lazyload></a><p>好吧，结果惨不忍睹，不能运行，不能反编译，跟没用一样。。。大概也就这样，这玩意肯定工程上面用不上，只能对简单的程序进行一些操作，也只能在CTF这里玩完了，但不妨碍它是一个伟大的发明。</p><p>参考博客</p><p><a href="https://blog.csdn.net/CherestSan/article/details/117608664">(121条消息) movfuscator混淆_mov混淆_Cherest_San的博客-CSDN博客</a></p><p> <a href="https://blog.csdn.net/weixin_52118017/article/details/130997247">CISCN 2023 初赛]moveAside_FeiJiNcFan的博客-CSDN博客</a></p><p><a href="https://or4ngesec.github.io/post/ciscn-2023-writeup-by-or4nge/#moveaside">CISCN2023 初赛 Writeup by or4nge (or4ngesec.github.io)</a></p><p><a href="https://blog.csdn.net/qq_33438733/article/details/79860304">(121条消息) movfuscator混淆了解一下 CTF_mov混淆_坚强的女程序员的博客-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;混淆器&quot;&gt;&lt;a href=&quot;#混淆器&quot; class=&quot;headerlink&quot; title=&quot;混淆器&quot;&gt;&lt;/a&gt;混淆器&lt;/h1&gt;&lt;p&gt;在mov指令的图灵完备性被证明之后，就产生了一种使用mov指令代替其他各种指令的混淆机制，运算，跳转，函数调用都可以全部使用mov指</summary>
      
    
    
    
    <category term="Reverse" scheme="https://kidder1.github.io/categories/Reverse/"/>
    
    
  </entry>
  
  <entry>
    <title>Hexo使用说明</title>
    <link href="https://kidder1.github.io/2023/07/18/hexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"/>
    <id>https://kidder1.github.io/2023/07/18/hexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/</id>
    <published>2023-07-18T01:30:09.000Z</published>
    <updated>2023-07-18T04:37:30.668Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo使用说明</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo n  # 创建文章</span><br><span class="line">hexo cl # 清理缓存</span><br><span class="line">hexo g  # 生成博客</span><br><span class="line">hexo s  # 本地部署</span><br><span class="line">hexo d  # 上线部署</span><br></pre></td></tr></table></figure><a class="simple-lightbox" href="/2023/07/18/hexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/image-20230718094005578.png"><img   src="/images/loading.svg" data-src="/2023/07/18/hexo%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/image-20230718094005578.png"  class="" title="This is an test image" lazyload></a><p>插入图片的话，安装插件，然后用下面的格式进行插入即可，图片描述可以自行修改</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img imageName imageDescription %&#125;</span><br></pre></td></tr></table></figure><p>博客的分类标签摘要等配置看下图即可</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo使用说明</span><br><span class="line">date: 2023-07-18 09:30:09</span><br><span class="line">author: Kidder1</span><br><span class="line">summary: Hexo使用简要说</span><br><span class="line">categories: Begin</span><br><span class="line">tag: </span><br><span class="line">- Begin </span><br><span class="line">- Hexo</span><br></pre></td></tr></table></figure><p>在根目录下面设置了两个sh文件，无论部署还是测试直接运行即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo使用说明&lt;/p&gt;
&lt;figure class=&quot;highlight text&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;</summary>
      
    
    
    
    <category term="Begin" scheme="https://kidder1.github.io/categories/Begin/"/>
    
    
    <category term="Begin" scheme="https://kidder1.github.io/tags/Begin/"/>
    
    <category term="Hexo" scheme="https://kidder1.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>博客配置说明书</title>
    <link href="https://kidder1.github.io/2023/07/17/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E%E4%B9%A6/"/>
    <id>https://kidder1.github.io/2023/07/17/%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E%E4%B9%A6/</id>
    <published>2023-07-16T16:00:00.000Z</published>
    <updated>2023-07-17T15:39:37.886Z</updated>
    
    <content type="html"><![CDATA[<p>主题配置说明书：<a href="https://minimalism.codeover.cn/docs/introduction">https://minimalism.codeover.cn/docs/introduction</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;主题配置说明书：&lt;a href=&quot;https://minimalism.codeover.cn/docs/introduction&quot;&gt;https://minimalism.codeover.cn/docs/introduction&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="Begin" scheme="https://kidder1.github.io/categories/Begin/"/>
    
    
  </entry>
  
  <entry>
    <title>转站说明</title>
    <link href="https://kidder1.github.io/2023/07/17/%E8%AF%B4%E6%98%8E/"/>
    <id>https://kidder1.github.io/2023/07/17/%E8%AF%B4%E6%98%8E/</id>
    <published>2023-07-16T16:00:00.000Z</published>
    <updated>2023-07-17T15:55:31.007Z</updated>
    
    <content type="html"><![CDATA[<p>懒得维护这么一个网站，东西越多，事情越多，很多东西不能专注，然后就会报复性的放松和逃避，我想这不是一个解决事情的好办法。想来想去，还是决定从一个新的地方开始了。<br>美化的尽头总是简约了，目的还是记录一些后面可以用的到的东西。关于我有我的微信，希望大家喜欢和和多多交流。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;懒得维护这么一个网站，东西越多，事情越多，很多东西不能专注，然后就会报复性的放松和逃避，我想这不是一个解决事情的好办法。想来想去，还是决定从一个新的地方开始了。&lt;br&gt;美化的尽头总是简约了，目的还是记录一些后面可以用的到的东西。关于我有我的微信，希望大家喜欢和和多多交流。&lt;</summary>
      
    
    
    
    <category term="Begin" scheme="https://kidder1.github.io/categories/Begin/"/>
    
    
  </entry>
  
</feed>
